<?php
 class Omx_Hooks_Helper_Omxpricing extends Mage_Core_Helper_Abstract { public function getDiscounts(Varien_Object $from, $section = null) { $values = unserialize($from->getOmxPricing()); if (!$values) { $values = array(); } switch ($section) { case null : return $values; break; case Omx_Hooks_Model_Omxpricing_Calculator::OMX_AMOUNT_DISCOUNTS : case Omx_Hooks_Model_Omxpricing_Calculator::OMX_FREE_ITEM_DISCOUNTS : return (array_key_exists($section, $values)) ? $values[$section] : array(); break; default: return $values; break; } } public function setDiscounts(Varien_Object $to, $newValue, $section = null) { $values = $this->getDiscounts($to); switch ($section) { case Omx_Hooks_Model_Omxpricing_Calculator::OMX_AMOUNT_DISCOUNTS : case Omx_Hooks_Model_Omxpricing_Calculator::OMX_FREE_ITEM_DISCOUNTS : $values[$section] = $newValue; break; case null : default : $values = $newValue; break; } $to->setOmxPricing( serialize($values) ); return $this; } public function addSelectedItemsToQuote($newItems = array(), $quote=null) { if(!$quote) { $quote = Mage::getSingleton('checkout/session')->getQuote(); } if(!is_array($newItems)) { return $this; } $freeItemDiscounts = $this->getDiscounts( $quote, Omx_Hooks_Model_Omxpricing_Calculator::OMX_FREE_ITEM_DISCOUNTS ); foreach($newItems as $policyId => $itemCode){ if($itemCode != "" ) { $freeItemDiscounts['selectedItems'][$policyId] = $itemCode; } } $this->setDiscounts( $quote, $freeItemDiscounts, Omx_Hooks_Model_Omxpricing_Calculator::OMX_FREE_ITEM_DISCOUNTS ); return $this; } public function removeSelectedItemsFromQuote($policyIds = array(), $quote = null) { if(!$quote instanceof Mage_Sales_Model_Quote) { $quote = Mage::getSingleton('checkout/session')->getQuote(); } if(!is_array($policyIds)) { $policyIds = array($policyIds); } $freeItemDiscounts = Mage::helper('hooks/omxpricing')->getDiscounts( $quote, Omx_Hooks_Model_Omxpricing_Calculator::OMX_FREE_ITEM_DISCOUNTS ); foreach($policyIds as $policyId) { if(array_key_exists($policyId, $freeItemDiscounts['selectedItems'])) { unset( $freeItemDiscounts['selectedItems'][$policyId]); } } Mage::helper('hooks/omxpricing')->setDiscounts( $quote, $freeItemDiscounts, Omx_Hooks_Model_Omxpricing_Calculator::OMX_FREE_ITEM_DISCOUNTS ); return $this; } public function itemSelectionComplete($quote = null) { if(!$quote instanceof Mage_Sales_Model_Quote) { $quote = Mage::getSingleton('checkout/session')->getQuote(); } $freeItemDiscounts = $this->getDiscounts( $quote, Omx_Hooks_Model_Omxpricing_Calculator::OMX_FREE_ITEM_DISCOUNTS ); $allKeys = array_keys( $freeItemDiscounts['selections']); $selectedKeys = array_keys($freeItemDiscounts['selectedItems']); $selectionComplete = true; foreach($allKeys as $key) { if(!in_array($key, $selectedKeys)) { $selectionComplete = false; break; } } return $selectionComplete; } public function canUseOmxTax() { if (Mage::getStoreConfig(Mage_Tax_Model_Config::CONFIG_XML_PATH_PRICE_INCLUDES_TAX) || Mage::getStoreConfig(Mage_Tax_Model_Config::CONFIG_XML_PATH_SHIPPING_INCLUDES_TAX) ) { return false; } else { return true; } } public function canUseOmxDiscount() { return (Mage::helper('hooks/data')->getSettings('useOmxTaxCalculation') == "1") ? true : false; } } 