<?php
 class Omx_Hooks_Model_Xml_Item_Customization_Update_Request extends Omx_Hooks_Model_Xml_Abstract { protected $_option; protected $_root; public function __construct (Mage_Catalog_Model_Product_Option $option) { parent::__construct(); $this->_option = $option; $this->createRootElement(); $this->appendCustomization(); } protected function createRootElement () { $rootElement = $this->createSafeElement('ItemCustomizationUpdateRequest'); $versionAttribute = $this->xml->createAttribute('version'); $rootElement->appendChild( $versionAttribute ); $rootAttributeValue = $this->xml->createTextNode('2.00'); $versionAttribute->appendChild($rootAttributeValue); $rootElement = $this->xml->appendChild($rootElement); $this->_root = $rootElement; } protected function appendCustomization () { $type = ''; $validation = $this->createSafeElement('ValidationDetail'); $valueDetail = $this->createSafeElement('ValueDetail'); $typeAttr= $this->xml->createAttribute('type'); $typeAttr->appendChild( $this->xml->createTextNode('XML') ); $valueDetail->appendChild($typeAttr); if ($this->_option->getPriceType() == 'percent') { $fullOrderErrorData = array( 'request' => 'creating options for product id: ' .$this->_option->getProduct()->getId(). ', option: ' .$this->_option->getTitle(), 'response'=> 'the price type "percent" is not suported in OMX', 'comment' => 'please, change the price type if you want to send the information to OMX' ); $this->log($fullOrderErrorData); throw new Exception('The price type "percent" for customized options is not supported in OMX.'); } switch ( strtolower($this->_option->getType()) ) { case Mage_Catalog_Model_Product_Option::OPTION_TYPE_FIELD: case Mage_Catalog_Model_Product_Option::OPTION_TYPE_TIME: $type = 'Text'; $validation->appendChild( $this->createSafeElement('MaxLength', $this->_option->getMaxCharacters()) ); $validation->appendChild( $this->createSafeElement('Required', $this->_option->getIsRequire()) ); break; case Mage_Catalog_Model_Product_Option::OPTION_TYPE_AREA: $type = 'Memo'; $validation->appendChild( $this->createSafeElement('MaxLength', $this->_option->getMaxCharacters()) ); $validation->appendChild( $this->createSafeElement('Required', $this->_option->getIsRequire()) ); break; case Mage_Catalog_Model_Product_Option::OPTION_TYPE_DROP_DOWN: case Mage_Catalog_Model_Product_Option::OPTION_TYPE_RADIO: $type = 'Picklist'; $validation->appendChild( $this->createSafeElement('Required', $this->_option->getIsRequire()) ); $this->_createOptionValues($valueDetail); break; case Mage_Catalog_Model_Product_Option::OPTION_TYPE_CHECKBOX: case Mage_Catalog_Model_Product_Option::OPTION_TYPE_MULTIPLE: $type = 'Checklist'; $validation->appendChild( $this->createSafeElement('Required', $this->_option->getIsRequire()) ); $this->_createOptionValues($valueDetail); break; case Mage_Catalog_Model_Product_Option::OPTION_TYPE_DATE: case Mage_Catalog_Model_Product_Option::OPTION_TYPE_DATE_TIME: $type = 'Date'; $validation->appendChild( $this->createSafeElement('Required', $this->_option->getIsRequire()) ); break; default: $fullOrderErrorData = array( 'request' => 'creating options for product id: ' .$this->_option->getProduct()->getId(), 'response'=> 'the type "'.$this->_option->getType().'" is not suported in OMX', 'comment' => 'please, remove the option if you want to send the information to OMX' ); $this->log($fullOrderErrorData); throw new Exception('The type "'.$this->_option->getType().'" for customized options is not supported in OMX, so the custom options of this product were not transmitted.'); break; } $custom = $this->_root->appendChild( $this->createSafeElement('ItemCustomization') ); $itemCodeAttr= $this->xml->createAttribute('itemCode'); $itemCodeAttr->appendChild( $this->xml->createTextNode($this->_option->getProduct()->getSku()) ); $custom->appendChild($itemCodeAttr); $custom->appendChild( $this->createSafeElement('Name', $this->_option->getTitle()) ); $custom->appendChild( $this->createSafeElement('Active', 1) ); $custom->appendChild( $this->createSafeElement('DataType', $type) ); $custom->appendChild( $validation ); $custom->appendChild( $this->createSafeElement('Surcharge', $this->_option->getPrice()) ); $custom->appendChild( $valueDetail ); } private function _createOptionValues($valueDetail){ $typeAttr= $this->xml->createAttribute('type'); $typeAttr->appendChild( $this->xml->createTextNode('XML') ); $valueDetail->appendChild($typeAttr); foreach ( $this->_option->getValues() as $value ) { if ($value->getPriceType() == 'percent') { $fullOrderErrorData = array( 'request' => 'creating options for product id: ' .$this->_option->getProduct()->getId(). ', option: ' .$this->_option->getTitle(), 'response'=> 'the price type "percent" is not suported in OMX', 'comment' => 'please, change the price type if you want to send the information to OMX' ); $this->log($fullOrderErrorData); throw new Exception('The price type "percent" for customized options is not supported in OMX, so the custom options of this product were not transmitted.'); } $omxvalue = $valueDetail->appendChild( $this->createSafeElement('Value') ); $omxvalue->appendChild( $this->createSafeElement('Active', '1') ); $omxvalue->appendChild( $this->createSafeElement('Name', $value->getTitle()) ); $omxvalue->appendChild( $this->createSafeElement('Surcharge', $value->getPrice()) ); } } }