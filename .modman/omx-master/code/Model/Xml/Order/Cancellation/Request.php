<?php
 class Omx_Hooks_Model_Xml_Order_Cancellation_Request extends Omx_Hooks_Model_Xml_Abstract { protected $_order; protected $_root; protected $_lines = array(); public function __construct () { $args = func_get_args(); parent::__construct(); $this->createRootElement(); if ($args[0][0] instanceof Omx_Hooks_Model_Order){ $this->_order = $args[0][0]; } if(is_array($args[0][1])) { $this->_lines = $args[0][1]; } $this->appendOrder(); } protected function createRootElement () { $rootElement = $this->createSafeElement('OrderCancellationRequest'); $rootVersionElement = $this->xml->createAttribute('version'); $rootElement->appendChild( $rootVersionElement ); $rootVersionValue = $this->xml->createTextNode('1.00'); $rootVersionElement->appendChild($rootVersionValue); $this->xml->appendChild($rootElement); $this->_root = $rootElement; } protected function appendOrder () { $orderElement = $this->_root->appendChild($this->createSafeElement('Order')); $orderNumberElement = $this->createSafeElement('OrderNumber', $this->_order->orderNumber); $orderElement->appendChild ($orderNumberElement); foreach ($this->_lines as $lineNumber => $line) { $lineElement = $orderElement->appendChild($this->createSafeElement('Line')); $lineElement->appendChild($this->createSafeElement('LineNumber', $lineNumber)); $quantity = (array_key_exists('cancelQuantity', $line)) ? $line['cancelQuantity']: 1; $lineElement->appendChild($this->createSafeElement('CancelQuantity', $quantity)); $reason = (array_key_exists('cancelReason', $line)) ? $line['cancelReason']: 1; $lineElement->appendChild($this->createSafeElement('CancelReason', $reason)); } } }