<?php
 class Omx_Hooks_Model_Product_Api extends Mage_Catalog_Model_Api_Resource { public function __construct() { $this->_storeIdSessionField = 'product_store_id'; } public function update($productId, $standingOrders, $paymentPlans, $createOptions) { if (!$productId) { $this->_fault('data_invalid', 'No product provided'); } $product = Mage::getModel('catalog/product'); if ($newId = $product->getIdBySku($productId)) { $productId = $newId; $product->setStoreId($this->_getStoreId()) ->load($productId); } if (!$product->getId()) { $this->_fault('not_exists'); } $product->setOmxStandingOrderConfigs(serialize($standingOrders)); $product->setOmxPaymentPlanInfos(serialize($paymentPlans)); $now = Zend_Date::now(); $now->setTimezone('America/New_York'); $stringDate = $now->toString('yyyy-MM-dd HH:mm:ss'); $product->setOmxLastReceivedFromOmx($stringDate); if ($createOptions) { $continuity = Mage::getModel('hooks/connector')->continuityCustomOptionName; $options = $product->getOptions(); foreach ($options as $option) { $title = $option->getData('title'); if($title == $continuity) { $existingOption = $option; } } if (isset($existingOption) && !count($standingOrders)) { $continuityOption = array( 'is_delete' => 1, 'option_id' => $existingOption->getId() ); if (count($options) == 1) { $product->setHasOptions(false); } } elseif (isset($existingOption)) { $values = array(); foreach ($existingOption->getValues() as $existingValue) { $toDelete = true; foreach ($standingOrders as $option) { if ($existingValue->getTitle() == $option->name) { $value = array( 'is_delete' => 0, 'title' => $option->name, 'option_type_id' => $existingValue->getId(), 'price_type' => 'fixed', 'price' => '', 'sku' => '', 'sort_order' => '' ); $values[] = $value; $toDelete = false; break; } } if ($toDelete) { $value = array( 'is_delete' => 1, 'option_type_id' => $existingValue->getId() ); $values[] = $value; } } foreach ($standingOrders as $option) { $isNew = true; foreach ($existingOption->getValues() as $existingValue) { if ($existingValue->getTitle() == $option->name) { $isNew = false; break; } } if ($isNew) { $value = array( 'is_delete' => 0, 'title' => $option->name, 'option_type_id' => -1, 'price_type' => 'fixed', 'price' => '', 'sku' => '', 'sort_order' => '' ); $values[] = $value; } } } elseif (count($standingOrders)) { $continuityOption = array( 'is_delete' => 0, 'title' => $continuity, 'previous_group' => '', 'previous_type' => '', 'type' => 'drop_down', 'is_require' => 0, 'sort_order' => 0, 'values' => array() ); foreach ($standingOrders as $option) { $continuityOption['values'][] = array( 'is_delete' => 0, 'title' => $option->name, 'option_type_id' => -1, 'price_type' => 'fixed', 'price' => '', 'sku' => '', 'sort_order' => '' ); } $product->setHasOptions(true); } } try { $product->getResource()->saveAttribute($product, "omx_standing_order_configs"); $product->getResource()->saveAttribute($product, "omx_payment_plan_infos"); $product->getResource()->saveAttribute($product, "omx_last_received_from_omx"); if ($createOptions) { if (isset($values)){ $opt = Mage::getModel('catalog/product_option_value'); $opt->setOption($existingOption); $opt->setValues($values); $opt->saveValues(); } elseif (isset($continuityOption)) { $opt = Mage::getModel('catalog/product_option'); $opt->setProduct($product); $opt->addOption($continuityOption); $opt->saveOptions(); } } $product->save(); } catch (Mage_Core_Exception $e) { $this->_fault('not_updated', $e->getMessage()); } return true; } } 
