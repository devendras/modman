<?php
 class Omx_Hooks_Model_Inventory_Product { const OMX_RECHECK = 10; static public function check ($product, $item, $force = false) { $entityId = $item->getProduct()->getId(); if (!$force) { $last_check = Mage::getModel('catalog/product') ->getResource() ->getAttributeRawValue($entityId, 'omx_iir_timestamp', Mage_Core_Model_App::ADMIN_STORE_ID); if (!$last_check) { $timestamp = self::update($entityId); } else { $checked = new Zend_Date(); $checked->setTimezone('America/New_York'); $checked->set($last_check, 'yyyy-MM-dd HH:mm:ss'); $now = Zend_Date::now(); $now->setTimezone('America/New_York'); $checked->addMinute(self::OMX_RECHECK); if (!$now->isEarlier($checked)) { $timestamp = self::update($entityId); } else { $timestamp = $last_check; } } } else { $timestamp = self::update($entityId); } return $timestamp; } static public function update ($entityId) { $product = Mage::getModel('catalog/product'); $product = $product->load($entityId); $xmlObject = Mage::getModel('hooks/xml_inventory_information_request', $product); $connector = Mage::getModel('hooks/connector'); if ($xmlObject instanceof Omx_Hooks_Model_Xml_Inventory_Information_Request) { $credentials = array( 'xml' => $xmlObject ); $omx_inventory_value = $connector->callOmx(Omx_Hooks_Model_Connector::CALL_TYPE_IIR, $credentials); $checked = Zend_Date::now(); $checked->setTimezone('America/New_York'); $stringDate = $checked->toString('yyyy-MM-dd HH:mm:ss'); $product->setOmxIirTimestamp($stringDate); $product->getResource()->saveAttribute($product, "omx_iir_timestamp"); if ($omx_inventory_value !== false) { $productStockItem = Mage::getModel('cataloginventory/stock_item')->loadByProduct($product); $omx_inventory_value = ($omx_inventory_value < 0) ? 0 : $omx_inventory_value; $magento_inventory_value = $productStockItem->getQty(); $productStockStatus = Mage::getModel('cataloginventory/stock_status')->load($product->getId()); if ($omx_inventory_value != $magento_inventory_value){ $productStockItem->setQty($omx_inventory_value); $productStockStatus->setQty($omx_inventory_value); if (($magento_inventory_value <= 0) && ($omx_inventory_value > 0)) { $productStockStatus->setStockStatus(1); $productStockItem->setIsInStock(1); } elseif ($omx_inventory_value === 0) { $productStockStatus->setStockStatus(0); $productStockItem->setIsInStock(0); } try { $productStockItem->save(); $productStockStatus->save(); } catch (Exception $e) { Mage::getSingleton('adminhtml/session')->addError($e->getMessage()); } } } return $stringDate; } return false; } }