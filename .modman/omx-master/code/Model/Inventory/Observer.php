<?php
 class Omx_Hooks_Model_Inventory_Observer extends Omx_Hooks_Model_Observer { public function hookCheckoutCartProductAddAfter ($observer) { $refreshInventory = Mage::getModel('hooks/connector')->refreshInventory; $connectorEnabled = Mage::getModel('hooks/connector')->connectorEnabled; if ($connectorEnabled && $refreshInventory && $this->_moduleConfigured){ $product = $observer->getProduct(); $item = $observer->getQuoteItem(); if ($product instanceof Mage_Catalog_Model_Product && $item instanceof Mage_Sales_Model_Quote_Item ){ $isStockManagedConfig = $product->getStockItem()->getUseConfigManageStock(); $isStockManaged = $product->getStockItem()->getManageStock(); if ($isStockManagedConfig && $isStockManaged) { Omx_Hooks_Model_Inventory_Product::check($product, $item); } } } return $this; } public function hookCheckoutCartAddProductComplete ($observer) { return $this; } public function hookCheckoutCartUpdateItemsAfter ($observer) { $refreshInventory = Mage::getModel('hooks/connector')->refreshInventory; $connectorEnabled = Mage::getModel('hooks/connector')->connectorEnabled; if ($connectorEnabled && $refreshInventory && $this->_moduleConfigured){ $data = $observer->getInfo(); $cart = $observer->getCart(); foreach ($data as $itemId => $itemInfo) { $item = $cart->getQuote()->getItemById($itemId); if (!$item) { continue; } $product = $item->getProduct(); if ($product instanceof Mage_Catalog_Model_Product && $item instanceof Mage_Sales_Model_Quote_Item ){ $isStockManagedConfig = $product->getStockItem()->getUseConfigManageStock(); $isStockManaged = $product->getStockItem()->getManageStock(); if ($isStockManagedConfig && $isStockManaged) { Omx_Hooks_Model_Inventory_Product::check($product, $item); } } } } return $this; } }