<?php
 class Omx_Hooks_Model_Order_Api extends Mage_Sales_Model_Api_Resource { public function __construct() { } public function activategiftcard($incrementId = '', $lineItems = array()) { $order = Mage::getModel('sales/order')->loadByIncrementId($incrementId); if(!$order->hasData() || !$incrementId) { $this->_fault('not_exists'); } if ($order->hasInvoices() && !$order->canInvoice()) { $this->_fault('cannot_invoice'); } try { $this->compareData($order, $lineItems); } catch (Mage_Core_Exception $e ) { $this->_fault('data_invalid', $e->getMessage()); } $this->invoiceOrder($order); return 1; } protected function invoiceOrder(Mage_Sales_Model_Order $order) { try { $invoice = Mage::getModel('sales/service_order', $order)->prepareInvoice(); $invoice->setRequestedCaptureCase(Mage_Sales_Model_Order_Invoice::CAPTURE_OFFLINE); $invoice->register(); $transactionSave = Mage::getModel('core/resource_transaction') ->addObject($invoice) ->addObject($invoice->getOrder()); $transactionSave->save(); } catch (Mage_Core_Exception $e) { $this->_fault('cannot_invoice', $e->getmessage()); } } protected function compareData(Mage_Sales_Model_Order $order, $recievedData = array()) { $giftCardsOnOrder = 0; $items = $order->getAllItems(); if (sizeof($items) < 1 ) { Mage::throwException('Order has no items.'); } foreach($recievedData as $key => $recievedLine) { $magentoItem = $order->getItemById($recievedLine->magentoLineID); if($magentoItem) { if ( $magentoItem->getProductType() != 'giftcard' || $magentoItem->getBaseRowTotal() != $recievedLine->giftCardTotalAmount ) { Mage::throwException("Item is either not a giftcard or a total amount differs on line_id: ".$recievedLine->magentoLineID); } $giftCardsOnOrder++; } else { Mage::throwException('Order line ['.$recievedLine->magentoLineID.'] does not exists on this order'); } } if ($giftCardsOnOrder != sizeof($recievedData)) { Mage::throwException('Mismatch in number of order lines'); } } } 