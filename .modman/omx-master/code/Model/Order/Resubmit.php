<?php
 class Omx_Hooks_Model_Order_Resubmit { static public function call () { $omx_now = Zend_Date::now('es_ES'); $omx_now->setTimezone('America/New_York'); $nowTimestamp = (int)$omx_now->getTimestamp(); $offset = $omx_now->subSecond(172800); $failedOrders = Mage::getModel('hooks/data') ->getCollection() ->addFieldToFilter('status', array('eq' => 0)) ->addFieldToFilter('timestamp', array('gt' => $offset->toString("yyyy-MM-dd HH:mm:ss"))) ->addFieldToFilter('parent_id', array('eq' => 0)) ; $results = array(); $failedForGood = array(); foreach ($failedOrders as $order) { $originalTime = new Zend_Date('es_ES'); $originalTime->setTimezone('America/New_York'); $originalTime->set($order->getTimestamp()); $originalTimestamp =(int)$originalTime->getTimestamp(); $entryOffset = round(abs(($nowTimestamp - $originalTimestamp)/60)); $sendFlag = self::returnInterval($entryOffset, $order->getResubmited()); if ($sendFlag) { $existingXmlString = Mage::helper('core')->decrypt($order->getXmlString()); if ($existingXmlString){ $xmlObject = Mage::getModel('hooks/xml_order_resubmit_request', $existingXmlString); if( $xmlObject instanceof Omx_Hooks_Model_Xml_Abstract ){ $times = $order->getResubmited() + 1; $order->setResubmited($times); $order->save(); $omx_now = Zend_Date::now(); $omx_now->setTimezone('America/New_York'); $credentials = array( 'xml' => $xmlObject, 'order_id' => $order->getOrderId(), 'status' => 0, 'response' => "", 'parent_id' => $order->getId(), 'timestamp' => $omx_now->toString("yyyy-MM-dd HH:mm:ss") ); $connector = Mage::getModel('hooks/connector'); $omxOrderId = $connector->callOmx(Omx_Hooks_Model_Connector::CALL_TYPE_UDOA, $credentials); if ($omxOrderId) { $order->setStatus($omxOrderId); $order->save(); } if (!$omxOrderId && $times > 5) { $failedForGood[] = $order->getId(); } $results[] = $order->getId(); } else { Mage::throwException(Mage::helper('hooks')->__('OMX error - XML could not be parsed')); } } } } if (count($results)) { $logData = array( 'request' => 'cron job executed', 'response'=> serialize($results), 'comment' => 'cron job executed - contains an array with the ids that were resent' ); self::log($logData); } if (count($failedForGood)) { $logData = array( 'request' => 'cron job executed', 'response'=> serialize($failedForGood), 'comment' => 'cron job executed - contains an array with the ids that permanently failed resubmitting' ); self::log($logData); self::notifyResubFailure(); } $settings = Mage::getModel('hooks/settings')->getCollection()->load(); foreach ($settings as $setting) { if ($setting->name === 'lastResubmissionJobTime') { $omx_now = Zend_Date::now(); $omx_now->setTimezone('America/New_York'); $setting->value = $omx_now->toString("yyyy-MM-dd HH:mm:ss"); $setting->save(); } elseif ($setting->name === 'resubmissionJobRunCount') { $setting->value = $setting->value == null || $setting->value == "" ? 1 : $setting->value + 1; $setting->save(); } } return $results; } private static function returnInterval ($offset, $resubmits) { if ( ($resubmits == 0 && $offset >= 5) || ($resubmits == 1 && $offset >= 15) || ($resubmits == 2 && $offset >= 60) || ($resubmits == 3 && $offset >= 120) || ($resubmits == 4 && $offset >= 360) || ($resubmits == 5 && $offset >= 720) ){ return true; } return false; } static public function log ($data) { $logdate = Zend_Date::now(); $logdate->setTimezone('America/New_York'); $data['timestamp'] = $logdate->toString("yyyy-MM-dd HH:mm:ss"); $log = Mage::getModel('hooks/logs')->setData( $data); try { $log->save(); unset($data); return $log->getId(); } catch (Exception $e) { Mage::getSingleton('adminhtml/session')->addError($e->getMessage()); return false; } } private static function notifyResubFailure() { $now = Zend_Date::now(); $now->setTimezone('America/New_York'); $timestring = $now->toString("yyyy-MM-dd")." 00:00:00"; $prevMessages = Mage::getModel('adminnotification/inbox') ->getCollection() ->addFilter('title', 'OMX Resubmit Error') ->addFilter('date_added >', $timestring) -> load(); if(!$prevMessages->count()) { $newMessage = Mage::getModel('hooks/adminNotification'); $newMessage->create( array( array( 'severity' => Mage_AdminNotification_Model_Inbox::SEVERITY_MAJOR, 'date_added' => $now->toString("yyyy-MM-dd HH:mm:ss"), 'title' => 'OMX Resubmit Error', 'description' => 'The resubmitting to OMX of one or more orders failed permanantly', 'url' => '' ) ) ); return true; } return false; } }