<?php
 class Omx_Hooks_Block_Omxpricing_Paypal_Express_Review_Freeitem extends Mage_Checkout_Block_Cart_Abstract { const UNSELECTED_POLICIES = 'unselected'; const SELECTED_POLICIES = 'selected'; const ALL_POLICIES = 'all'; protected function _construct() { parent::_construct(); return $this; } protected function _prepareLayout() { parent::_prepareLayout(); return $this; } public function canSelect() { $canSelect = false; if(Mage::helper('hooks/data')->getSettings('useOmxMarketingPolicies')== 1) { $freeItemDiscounts = Mage::helper('hooks/omxpricing')->getDiscounts( $this->getQuote(), Omx_Hooks_Model_Omxpricing_Calculator::OMX_FREE_ITEM_DISCOUNTS ); if(array_key_exists('canSelect', $freeItemDiscounts)) { $canSelect = $freeItemDiscounts['canSelect']; } } return $canSelect; } public function getFreeItemDiscounts() { $freeItemDiscounts = array(); if(Mage::helper('hooks/data')->getSettings('useOmxMarketingPolicies')== 1) { $freeItemDiscounts = Mage::helper('hooks/omxpricing')->getDiscounts( $this->getQuote(), Omx_Hooks_Model_Omxpricing_Calculator::OMX_FREE_ITEM_DISCOUNTS ); } return $freeItemDiscounts; } public function getFreeItemSelections($section = self::ALL_POLICIES) { $freeItemDiscounts = array(); $selections = array(); $unselected = array(); $selected = array(); if(Mage::helper('hooks/data')->getSettings('useOmxMarketingPolicies')== 1) { $freeItemDiscounts = Mage::helper('hooks/omxpricing')->getDiscounts( $this->getQuote(), Omx_Hooks_Model_Omxpricing_Calculator::OMX_FREE_ITEM_DISCOUNTS ); if(array_key_exists('selections', $freeItemDiscounts)) { if(is_array($freeItemDiscounts['selections'])) { $selections = $freeItemDiscounts['selections']; } } foreach($selections as $policyId => $itemCode) { if (array_key_exists($policyId, $freeItemDiscounts['selectedItems'])) { $selected[$policyId] = $selections[$policyId]; } else { $unselected[$policyId] = $selections[$policyId]; } } } switch ($section) { case self::UNSELECTED_POLICIES : return $unselected; case self::SELECTED_POLICIES : return $selected; default : return $selections; } } public function getCurrentConnectionState() { return Mage::getModel('hooks/connector')->getCurrentConnectionState(); } }