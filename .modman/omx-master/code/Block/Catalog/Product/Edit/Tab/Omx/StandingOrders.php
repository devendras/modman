<?php
 class Omx_Hooks_Block_Catalog_Product_Edit_Tab_Omx_StandingOrders extends Mage_Adminhtml_Block_Widget_Grid { public function __construct() { parent::__construct(); $this->setId('omx_product_standingorders'); $this->setFilterVisibility(false); $this->setPagerVisibility(false); $this->setUseAjax(true); } protected function _getProduct() { return Mage::registry('current_product'); } protected function _prepareCollection() { $product = $this->_getProduct(); $products = Mage::getModel('catalog/product')->getCollection() ->addAttributeToSelect("omx_standing_order_configs"); $wantedProduct = $products->getItemById($this->_getProduct()->getId()); $configs = unserialize($wantedProduct->getOmxStandingOrderConfigs()); $collection = new Varien_Data_Collection(); if (is_array($configs)) { foreach ($configs as $config) { $item = new Varien_Object(); $item->addData(array('configuration_id' => $config->configurationID, 'name' => $config->name)); $collection->addItem($item); } } $this->setCollection($collection); return parent::_prepareCollection(); } protected function _prepareColumns() { $this->addColumn('configuration_id', array( 'header' => Mage::helper('hooks')->__('ID'), 'width' => 60, 'index' => 'configuration_id', 'sortable' => false, 'filter' => false )); $this->addColumn('name', array( 'header' => Mage::helper('hooks')->__('OMX Standing Order Configurations'), 'index' => 'name', 'sortable' => false, 'filter' => false )); return parent::_prepareColumns(); } } 